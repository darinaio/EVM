exp_maclaurin:
        fld     QWORD PTR [esp+4]
        fldz
        fld     st(0)
        fld1
        jmp     .L2
.L4:
        fxch    st(1)
.L2:
        fadd    st(2), st
        fmul    st, st(3)
        fxch    st(1)
        fadd    DWORD PTR .LC1
        fdiv    st(1), st
        fld     DWORD PTR .LC2
        fcomip  st, st(1)
        ja      .L4
        fstp    st(0)
        fstp    st(0)
        fstp    st(1)
        ret
.LC4:
        .string "%lf"
.LC5:
        .string "ERROR"
.LC6:
        .string "%.10lf\n"
.LC8:
        .string "%.10lf"
main:
        lea     ecx, [esp+4]
        and     esp, -16
        push    DWORD PTR [ecx-4]
        push    ebp
        mov     ebp, esp
        push    esi
        push    ebx
        push    ecx
        sub     esp, 52
        lea     eax, [ebp-32]
        push    eax
        push    OFFSET FLAT:.LC4
        call    __isoc99_scanf
        add     esp, 16
        cmp     eax, 1
        je      .L6
        sub     esp, 12
        push    OFFSET FLAT:.LC5
        call    printf
        add     esp, 16
.L7:
        mov     eax, 0
        lea     esp, [ebp-12]
        pop     ecx
        pop     ebx
        pop     esi
        pop     ebp
        lea     esp, [ecx-4]
        ret
.L6:
        call    clock
        mov     esi, eax
        sub     esp, 8
        push    DWORD PTR [ebp-28]
        push    DWORD PTR [ebp-32]
        call    exp_maclaurin
        add     esp, 16
        fstp    QWORD PTR [ebp-48]
        call    clock
        mov     ebx, eax
        sub     esp, 4
        push    DWORD PTR [ebp-44]
        push    DWORD PTR [ebp-48]
        push    OFFSET FLAT:.LC6
        call    printf
        sub     ebx, esi
        mov     DWORD PTR [ebp-48], ebx
        fild    DWORD PTR [ebp-48]
        fdiv    DWORD PTR .LC7
        fstp    QWORD PTR [esp+4]
        mov     DWORD PTR [esp], OFFSET FLAT:.LC8
        call    printf
        add     esp, 16
        jmp     .L7
.LC1:
        .long   1065353216
.LC2:
        .long   1332245831
.LC7:
        .long   1232348160
