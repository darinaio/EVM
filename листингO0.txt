exp_maclaurin:
        push    ebp
        mov     ebp, esp
        sub     esp, 40
        mov     eax, DWORD PTR [ebp+8]
        mov     DWORD PTR [ebp-40], eax
        mov     eax, DWORD PTR [ebp+12]
        mov     DWORD PTR [ebp-36], eax
        fldz
        fstp    QWORD PTR [ebp-8]
        fld1
        fstp    QWORD PTR [ebp-16]
        fldz
        fstp    QWORD PTR [ebp-24]
        jmp     .L2
.L3:
        fld     QWORD PTR [ebp-8]
        fadd    QWORD PTR [ebp-16]
        fstp    QWORD PTR [ebp-8]
        fld     QWORD PTR [ebp-16]
        fmul    QWORD PTR [ebp-40]
        fld     QWORD PTR [ebp-24]
        fld1
        faddp   st(1), st
        fdivp   st(1), st
        fstp    QWORD PTR [ebp-16]
        fld     QWORD PTR [ebp-24]
        fld1
        faddp   st(1), st
        fstp    QWORD PTR [ebp-24]
.L2:
        fld     QWORD PTR [ebp-24]
        fld     QWORD PTR .LC2
        fcomip  st, st(1)
        fstp    st(0)
        ja      .L3
        fld     QWORD PTR [ebp-8]
        leave
        ret
.LC4:
        .string "%lf"
.LC5:
        .string "ERROR"
.LC6:
        .string "%.10lf\n"
.LC8:
        .string "%.10lf"
main:
        lea     ecx, [esp+4]
        and     esp, -16
        push    DWORD PTR [ecx-4]
        push    ebp
        mov     ebp, esp
        push    ecx
        sub     esp, 52
        sub     esp, 8
        lea     eax, [ebp-40]
        push    eax
        push    OFFSET FLAT:.LC4
        call    __isoc99_scanf
        add     esp, 16
        cmp     eax, 1
        je      .L6
        sub     esp, 12
        push    OFFSET FLAT:.LC5
        call    printf
        add     esp, 16
        mov     eax, 0
        jmp     .L8
.L6:
        call    clock
        mov     DWORD PTR [ebp-12], eax
        fld     QWORD PTR [ebp-40]
        sub     esp, 8
        lea     esp, [esp-8]
        fstp    QWORD PTR [esp]
        call    exp_maclaurin
        add     esp, 16
        fstp    QWORD PTR [ebp-24]
        call    clock
        mov     DWORD PTR [ebp-28], eax
        sub     esp, 4
        push    DWORD PTR [ebp-20]
        push    DWORD PTR [ebp-24]
        push    OFFSET FLAT:.LC6
        call    printf
        add     esp, 16
        mov     eax, DWORD PTR [ebp-28]
        sub     eax, DWORD PTR [ebp-12]
        mov     DWORD PTR [ebp-44], eax
        fild    DWORD PTR [ebp-44]
        fld     QWORD PTR .LC7
        fdivp   st(1), st
        sub     esp, 4
        lea     esp, [esp-8]
        fstp    QWORD PTR [esp]
        push    OFFSET FLAT:.LC8
        call    printf
        add     esp, 16
        mov     eax, 0
.L8:
        mov     ecx, DWORD PTR [ebp-4]
        leave
        lea     esp, [ecx-4]
        ret
.LC2:
        .long   -536870912
        .long   1106054824
.LC7:
        .long   0
        .long   1093567616
